// <auto-generated />
using System;
using InternshipManagement.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternshipManagement.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InternshipManagement.API.Entities.ActivityLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Details")
                        .HasColumnType("longtext");

                    b.Property<string>("IpAddress")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ActivityLogs");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Comments")
                        .HasColumnType("longtext");

                    b.Property<int>("Communication")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("EvaluatorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("EvaluatorType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("InternshipId")
                        .HasColumnType("char(36)");

                    b.Property<decimal>("OverallRating")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("ProblemSolving")
                        .HasColumnType("int");

                    b.Property<int>("Professionalism")
                        .HasColumnType("int");

                    b.Property<int>("Teamwork")
                        .HasColumnType("int");

                    b.Property<int>("TechnicalSkills")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EvaluatorId");

                    b.HasIndex("InternshipId");

                    b.HasIndex("UserId");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Internship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("AcademicSupervisorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("AgreementDocumentUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyAddress")
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CompanyPhone")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("SiteSupervisorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AcademicSupervisorId");

                    b.HasIndex("SiteSupervisorId");

                    b.HasIndex("Status");

                    b.HasIndex("StudentId");

                    b.ToTable("Internships");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.InternshipTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Feedback")
                        .HasColumnType("longtext");

                    b.Property<Guid>("InternshipId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("SubmissionUrl")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("DueDate");

                    b.HasIndex("InternshipId");

                    b.HasIndex("Status");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsRead")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("ReadAt")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("ReceiverId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("IsRead");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AcademicLevel")
                        .HasColumnType("longtext");

                    b.Property<decimal?>("GPA")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("University")
                        .HasColumnType("longtext");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("StudentId")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Students");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Supervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<string>("Organization")
                        .HasColumnType("longtext");

                    b.Property<string>("Specialization")
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("Type");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Supervisors");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Role");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.WeeklyReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Achievements")
                        .HasColumnType("longtext");

                    b.Property<string>("Challenges")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Feedback")
                        .HasColumnType("longtext");

                    b.Property<string>("FileUrl")
                        .HasColumnType("longtext");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<Guid>("InternshipId")
                        .HasColumnType("char(36)");

                    b.Property<string>("NextWeekPlan")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Status");

                    b.HasIndex("InternshipId", "WeekNumber")
                        .IsUnique();

                    b.ToTable("WeeklyReports");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.ActivityLog", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.User", "User")
                        .WithMany("ActivityLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Evaluation", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.User", "Evaluator")
                        .WithMany()
                        .HasForeignKey("EvaluatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternshipManagement.API.Entities.Internship", "Internship")
                        .WithMany("Evaluations")
                        .HasForeignKey("InternshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshipManagement.API.Entities.User", null)
                        .WithMany("Evaluations")
                        .HasForeignKey("UserId");

                    b.Navigation("Evaluator");

                    b.Navigation("Internship");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Internship", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.Supervisor", "AcademicSupervisor")
                        .WithMany("AcademicInternships")
                        .HasForeignKey("AcademicSupervisorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InternshipManagement.API.Entities.Supervisor", "SiteSupervisor")
                        .WithMany("SiteInternships")
                        .HasForeignKey("SiteSupervisorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("InternshipManagement.API.Entities.Student", "Student")
                        .WithMany("Internships")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AcademicSupervisor");

                    b.Navigation("SiteSupervisor");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.InternshipTask", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.User", "Creator")
                        .WithMany("CreatedTasks")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternshipManagement.API.Entities.Internship", "Internship")
                        .WithMany("Tasks")
                        .HasForeignKey("InternshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Creator");

                    b.Navigation("Internship");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Message", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.User", "Receiver")
                        .WithMany("ReceivedMessages")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("InternshipManagement.API.Entities.User", "Sender")
                        .WithMany("SentMessages")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Student", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.User", "User")
                        .WithOne("Student")
                        .HasForeignKey("InternshipManagement.API.Entities.Student", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Supervisor", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.User", "User")
                        .WithOne("Supervisor")
                        .HasForeignKey("InternshipManagement.API.Entities.Supervisor", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.WeeklyReport", b =>
                {
                    b.HasOne("InternshipManagement.API.Entities.Internship", "Internship")
                        .WithMany("WeeklyReports")
                        .HasForeignKey("InternshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Internship");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Internship", b =>
                {
                    b.Navigation("Evaluations");

                    b.Navigation("Tasks");

                    b.Navigation("WeeklyReports");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Student", b =>
                {
                    b.Navigation("Internships");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.Supervisor", b =>
                {
                    b.Navigation("AcademicInternships");

                    b.Navigation("SiteInternships");
                });

            modelBuilder.Entity("InternshipManagement.API.Entities.User", b =>
                {
                    b.Navigation("ActivityLogs");

                    b.Navigation("CreatedTasks");

                    b.Navigation("Evaluations");

                    b.Navigation("ReceivedMessages");

                    b.Navigation("SentMessages");

                    b.Navigation("Student");

                    b.Navigation("Supervisor");
                });
#pragma warning restore 612, 618
        }
    }
}
